# SPDX-License-Identifier: MIT
- name: 'Install Munin'
  apt:
    name: [munin-node]

- name: Install some dependencies for Munin plugins
  apt:
    name: [libwww-perl, libcache-cache-perl]

- name: Install Tirex plugin for Munin
  when: munin.tirex_enabled
  apt:
    deb: '/root/packages/tirex-munin-plugin_0.6.1_amd64.deb'
  notify:
    - systemd restart munin-node

- name: Add user munin to group sslkeyaccess
  user:
    append: yes
    name: munin
    groups: ['sslkeyaccess']

- name: Enable additional Munin plugins
  file:
    src: '/usr/share/munin/plugins/{{ item.dest }}'
    dest: '/etc/munin/plugins/{{ item.name }}'
    state: link
    owner: root
    group: root
  loop: '{{ munin.node_plugins }}'
  notify:
    - systemd restart munin-node

#  - name: Create /etc/munin/munin-conf.d
#    file:
#      path: '/etc/munin/munin-conf.d'
#      state: directory
#      owner: root
#      group: root

- name: TLS configuration for Munin node
  blockinfile:
    path: '/etc/munin/munin-node.conf'
    block: |
      tls enabled
      tls_verify_certificate no
      tls_private_key /etc/letsencrypt/{{ letsencrypt.ssl_domain }}/domain.key
      tls_certificate /etc/letsencrypt/{{ letsencrypt.ssl_domain }}/{{ letsencrypt.ssl_domain }}.crt
  notify:
    - systemd restart munin-node

- name: Include plugin configuration into node configuration
  lineinfile:
    path: /etc/munin/munin-node.conf
    regexp: '^#? *includedir /etc/munin/plugin-conf.d'
    line: 'includedir /etc/munin/plugin-conf.d'
  notify:
    - systemd restart munin-node

## We do not use cidr_allow due to https://github.com/munin-monitoring/munin/issues/1177 and use pure regular expressions instead
- name: Allow connections from brennerle.michreichert.de
  lineinfile:
    path: /etc/munin/munin-node.conf
    regexp: '^#? *allow ^{{ item|replace(".", "\\\\.") }}\\$ *$'
    line: 'allow ^{{ item|replace(".", "\\.") }}$'
  with_list: '{{ munin.accept_from }}'
  notify:
    - systemd restart munin-node

#  - name: 'Allow access from specified IP addresses on port 4949 (Munin)'
#    ufw:
#      rule: allow
#      port: '4949'
#      proto: tcp
#      comment: 'Allow connections on port 4949 from {{ item }}'
#      src: '{{ item }}'
#    with_list: '{{ munin.accept_from }}'

      #  - name: Configure munin-node
      #    copy:
      #      dest: /etc/munin/munin-conf.d/node.conf
      #      owner: root
      #      group: root
      #      mode: 0644
      #      content: |
      #        host_name {{ ansible_facts['nodename'] }}
      #        host *
      #        ipv *

- name: Configure PostgreSQL Munin plugin and PostgreSQL for it
  when: '"postgres_users" in munin.node_plugins|map(attribute="name")'
  block:
    - name: Install Perl module DBD::Pg
      apt:
        name: libdbd-pg-perl

    - name: Configure Munin PostgreSQL plugin
      copy:
        dest: /etc/munin/plugin-conf.d/zzz-postgres
        owner: root
        group: root
        mode: 0644
        content: |
          [postgres_*]
            user postgres
            env.PGUSER postgres
            env.PGPORT 5432
      notify:
        - systemd restart munin-node

- name: Configure Apache Munin plugin and Apache for it
  when: '"apache_accesses" in munin.node_plugins|map(attribute="name")'
  block:
    - name: Enable Apache modules server-status
      apache2_module:
        name: 'status'
        state: present
      notify:
        - systemd restart apache

    - name: Configure Munin Apache plugin
      copy:
        dest: '/etc/munin/plugin-conf.d/zzz-apache_plugins'
        owner: root
        group: root
        mode: 0644
        content: |
            [apache_*]
              env.url http://localhost:%d/server-status?auto
              env.ports 80
      notify:
        - systemd restart munin-node

    - name: Configure Apache virtual host for server-status Munin Apache plugin
      copy:
        src: apache_server_status.conf
        dest: '/etc/apache2/conf-available/apache_server_status.conf'
        owner: root
        group: root
        mode: 0644
      notify:
        - systemd reload apache2

    - name: Enable Apache VirtualHost configuration for server-status
      command:
        cmd: 'a2enconf apache_server_status.conf'
        chdir: /etc/apache2/conf-available
        creates: /etc/apache2/conf-enabled/apache_server_status.conf
      notify:
        - systemd reload apache2

- name: Configure Munin ip_ plugin
  when: munin.node_ip_plugin
  block:
    - name: Configure Munin ip_ plugin for IPv4
      copy:
        dest: '/etc/munin/plugin-conf.d/zzz-ip_{{ item|replace(".", "_") }}.conf'
        owner: root
        group: root
        mode: 0644
        content: |
          [ip_{{ item }}]
            user root
            env.hostname {{ ansible_facts['nodename'] }}
      with_list: '{{ ansible_all_ipv4_addresses }}'
      notify:
        - systemd restart munin-node

    - name: Configure Munin ip_ plugin for IPv6
      copy:
        dest: '/etc/munin/plugin-conf.d/zzz-ip_{{ item|replace(":", "_") }}.conf'
        owner: root
        group: root
        mode: 0644
        content: |
          [ip_{{ item }}]
            env.hostname {{ ansible_facts['nodename'] }}
      with_list: '{{ ansible_all_ipv6_addresses }}'
      notify:
        - systemd restart munin-node

    - name: Enable Munin ip_ plugin for each IPv4 addresses
      file:
        src: '/usr/share/munin/plugins/ip_'
        dest: '/etc/munin/plugins/ip_{{ item }}'
        state: link
        owner: root
        group: root
      with_list: '{{ ansible_all_ipv4_addresses }}'
      notify:
        - systemd restart munin-node

    - name: Enable Munin ip_ plugin for each IPv6 addresses
      file:
        src: '/usr/share/munin/plugins/ip_'
        dest: '/etc/munin/plugins/ip_{{ item }}'
        state: link
        owner: root
        group: root
      with_list: '{{ ansible_all_ipv6_addresses }}'
      notify:
        - systemd restart munin-node

- name: Steps for the Munin Tirex plugin
  when: munin.tirex_enabled
  block:
    - name: 'Create Systemd unit for tirex-tiledir-check@.service'
      copy:
        owner: root
        group: root
        mode: 0644
        dest: /etc/systemd/system/tirex-tiledir-check@.service
        content: |
          [Unit]
          Description=Create Tirex tile directory statistics for map %I

          [Service]
          Type=oneshot
          User=tirex
          ExecStart=/usr/bin/tirex-tiledir-check --stats=/var/lib/tirex/stats/tiles-%i.stats %i
          Nice=+2
      notify:
        - systemd daemon-reload

    - name: 'Create Systemd timer for tirex-tiledir-check@.timer'
      copy:
        owner: root
        group: root
        mode: 0644
        dest: /etc/systemd/system/tirex-tiledir-check@.timer
        content: |
          [Unit]
          Description=Tirex tile directory statistics for map %I

          [Timer]
          OnCalendar=*-*-* 1:30
          Unit=tirex-tiledir-check@%i.service

          [Install]
          WantedBy=default.target
      notify:
        - systemd daemon-reload

    - name: Enable and start tirex-tiledir-check@.timer
      systemd:
        name: 'tirex-tiledir-check@{{ item }}.timer'
        enabled: yes
        state: started
      loop:
        - standard
        - maxspeed
        - signals
        - electrification
        - gauge

    - name: Configure Tirex plugins
      copy:
        dest: '/etc/munin/plugin-conf.d/zzz-tirex.conf'
        owner: root
        group: root
        mode: 0644
        content: |
          [tirex-*]
            env.TIREX_CONFIGFILE /etc/tirex/tirex.conf
      with_list: '{{ ansible_all_ipv4_addresses }}'
      notify:
        - systemd restart munin-node

- name: systemctl start munin-node
  systemd:
    name: munin-node
    state: started
    enabled: yes
