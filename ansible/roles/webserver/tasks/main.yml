# SPDX-License-Identifier: MIT
- name: Install database packages using apt
  apt:
    name:
      - apache2

- name: Install requirements for mod_wsgi
  when: '"wsgi" in apache.modules and (apache.modules.wsgi is none or not apache.modules.wsgi.enabled is defined or apache.modules.wsgi.enabled|default("yes") == "yes")'
  apt:
    name:
      - libapache2-mod-wsgi-py3

- name: Apache configurations
  when: apache.configurations is defined
  block:
    - name: 'Write Apache configuration files'
      loop: '{{ apache.configurations|default({}) | dict2items }}'
      when: item.value.content is defined and item.value.state | default("present") == "present"
      copy:
        dest: "/etc/apache2/conf-available/{{ item.key }}"
        owner: root
        group: root
        mode: 0644
        content: '{{ item.value.content }}'
      notify:
        - systemd reload apache2
    - name: 'Disable Apache configurations'
      loop: '{{ apache.configurations|default({}) | dict2items }}'
      when: 'not item.value.enabled | default("yes")'
      command:
        cmd: "a2disconf {{ item.key }}"
        chdir: /etc/apache2/conf-available
        removes: '/etc/apache2/conf-enabled/{{ item.key }}'
      notify:
        - systemd reload apache2
    - name: 'Enable Apache configurations'
      loop: '{{ apache.configurations|default({}) | dict2items }}'
      when: 'item.value.enabled | default("yes")'
      command:
        cmd: "a2enconf {{ item.key }}"
        chdir: /etc/apache2/conf-available
        creates: '/etc/apache2/conf-enabled/{{ item.key }}'
      notify:
        - systemd reload apache2

- name: Apache sites
  block:
    - name: 'Write Apache sites'
      loop: '{{ apache.sites | default({}) | dict2items }}'
      when: 'item.value.content is defined and item.value.state | default("present") == "present"'
      copy:
        dest: "/etc/apache2/sites-available/{{ item.key }}"
        owner: root
        group: root
        mode: 0644
        content: '{{ item.value.content }}'
      notify:
        - systemd reload apache2
    - name: 'Disable Apache sites'
      loop: '{{ apache.sites | default({}) | dict2items }}'
      when: 'not item.value.enabled | default("yes")'
      command:
        cmd: "a2dissite {{ item.key }}"
        chdir: /etc/apache2/sites-available
        removes: '/etc/apache2/sites-enabled/{{ item.key }}'
      notify:
        - systemd reload apache2
    - name: 'Enable Apache sites'
      loop: '{{ apache.sites | default({}) | dict2items }}'
      when: 'item.value.enabled | default("yes")'
      command:
        cmd: "a2ensite {{ item.key }}"
        chdir: /etc/apache2/sites-available
        creates: '/etc/apache2/sites-enabled/{{ item.key }}'
      notify:
        - systemd reload apache2

- name: Enable/Disable Apache modules
  apache2_module:
    name: '{{ item.key }}'
    state: '{{ item.value.state | default("present") }}'
  loop: '{{ apache.modules | default({}) | dict2items }}'
  notify:
    - systemd restart apache2

- name: Create /var/www/common
  file:
    path: /var/www/common
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Create /var/www/common/ban_all_robots.txt
  copy:
    dest: /var/www/common/ban_all_robots.txt
    owner: root
    group: root
    mode: '0644'
    content: |
      User-agent: *
      Disallow: /
