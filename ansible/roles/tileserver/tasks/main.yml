# SPDX-License-Identifier: MIT
# fontconfig contains fc-list to debug font issues
- name: Set variables depending on Debian version
  block:
    - set_fact:
        tile_cache_dir: "/var/lib/tirex/tiles"
        tirex_user: tirex
      when: 'debian_version == "buster"'
    - set_fact:
        tile_cache_dir: "/var/cache/tirex/tiles"
        tirex_user: _tirex
      when: 'debian_version != "buster"'

- name: Install database packages using apt
  apt:
    name: [postgresql, postgis, 'postgresql-{{pg_version}}-postgis-{{postgis_version}}', fontconfig]

- name: Install pyscopg2 because it is a dependency for Ansible's PostgreSQL module
  apt:
    name: python3-psycopg2

- name: Install helpful packages for map style debugging
  apt:
    name: nik4

- name: Start PostgreSQL
  systemd:
    name: postgresql
    state: started

- name: Create system user osmimport
  user:
    name: osmimport
    shell: '/usr/sbin/nologin'
    home: '{{ osm_data_dir }}'
    comment: 'OSM data import user'
    password: '*'
    system: yes

- name: Create directories for flatnodes file, tile expiry list and temporary directory for planet update
  file:
    path: '{{ item }}'
    owner: osmimport
    group: osmimport
    state: directory
    mode: '0755'
  loop:
    - '{{ timestamp_directory }}'
    - '{{ flatnodes_dir }}'
    - '{{ tile_expiry_dir }}'
    - '{{ osm_data_dir }}/tmp'

- name: Create database user osmimport for data import and update
  become: true
  become_user: postgres
  postgresql_user:
    name: osmimport
    db: 'postgres'

- name: 'Create database {{ osm_dbname }}'
  become: true
  become_user: postgres
  postgresql_db:
    name: '{{ osm_dbname }}'
    encoding: "utf-8"
    state: present
    owner: osmimport

- name: Create database extension PostGIS and Hstore
  become: true
  become_user: postgres
  postgresql_ext:
    db: '{{ osm_dbname }}'
    name: '{{ item }}'
  loop:
    - 'postgis'
    - 'hstore'

- name: Enable peer authentication for PostgreSQL
  postgresql_pg_hba:
    contype: local
    databases: '{{ osm_dbname }}'
    dest: '/etc/postgresql/{{ pg_version }}/main/pg_hba.conf'
    method: peer
    users: 'osmimport,tirex'
    mode: 0640
    owner: postgres
    group: postgres
  notify:
    - systemd reload postgresql

- name: Install Osm2pgsql
  apt:
    name: osm2pgsql

- name: Install other tile serving dependencies from Apt
  apt:
    name: wget,gdal-bin,nodejs,npm,libwww-perl,mapnik-utils,bc,git,osmium-tool,python3-pyosmium,pyosmium

- name: Create directories for scripts
  file:
    path: '{{ item }}'
    owner: root
    group: root
    state: directory
    mode: '0755'
  loop:
    - '{{ tileserver_script_dir }}/scripts'
    - '{{ tileserver_script_dir }}/post-update.d'

- name: Copy scripts # noqa risky-file-permissions
  ansible.builtin.copy:
    dest: '{{ tileserver_script_dir }}/'
    src: 'files/scripts'
    owner: root
    group: root

- name: Configure OSM import # noqa risky-file-permissions
  ansible.builtin.template:
    dest: '{{ tileserver_script_dir }}/scripts/config.cfg'
    src: 'config.cfg'
    owner: root
    group: root

- name: Write Systemd Unit file for update-data
  copy:
    dest: '/etc/systemd/system/update-data.service'
    mode: 0644
    owner: root
    group: root
    content: |
      [Unit]
      Description=Update OSM data and apply diff to database
      After=syslog.target network.target
      Requires=postgresql.service tirex-master.service

      [Service]
      Type=simple
      ExecStart=/bin/bash {{ tileserver_script_dir }}/scripts/update_osm.sh
      Environment="OSMIUM_POOL_THREADS=3"
      User=osmimport
      Group=users
      StandardOutput=journal
      StandardError=journal
      SyslogIdentifier=update_osm
      CPUQuota=400%
      Nice=+1
  notify:
    - systemd daemon-reload

- name: Write Systemd Timer for update-data.timer
  copy:
    dest: '/etc/systemd/system/update-data.timer'
    mode: 0644
    owner: root
    group: root
    content: |
      [Unit]
      Description=Update OSM data and apply diff to database

      [Timer]
      OnCalendar=*-*-* 0,8,13,20:05
      Unit=update-data.service

      [Install]
      WantedBy=default.target
  notify:
    - systemd daemon-reload
    - systemd restart update-data.timer

- name: Write Systemd Unit file for rerender-lowzoom-tiles.service
  copy:
    dest: '/etc/systemd/system/rerender-lowzoom-tiles.service'
    mode: 0644
    owner: root
    group: root
    content: |
      [Unit]
      Description=Rerender low zoom tiles
      After=syslog.target network.target
      Requires=postgresql.service tirex-master.service

      [Service]
      Type=simple
      ExecStart=/usr/bin/tirex-batch -p 26 map=standard,maxspeed,signals,electrification,gauge z=0-9 bbox=-150,-55,180,71
      User={{ tirex_user }}
      Group=users
      StandardOutput=journal
      StandardError=journal
  notify:
    - systemd daemon-reload

- name: Write Systemd Timer for rerender-lowzoom-tiles.timer
  copy:
    dest: '/etc/systemd/system/rerender-lowzoom-tiles.timer'
    mode: 0644
    owner: root
    group: root
    content: |
      [Unit]
      Description=Rerender low zoom tiles

      [Timer]
      OnUnitActiveSec=30d
      OnBootSec=2h
      Unit=rerender-lowzoom-tiles.service

      [Install]
      WantedBy=default.target
  notify:
    - systemd daemon-reload

- name: Install fonts for map style
  apt:
    name: [fonts-noto-cjk, fonts-noto-hinted, fonts-noto-unhinted, fonts-noto-color-emoji, fonts-hanazono]

- name: Install Unifont map style
  block:
    - name: Install Unifont (Debian Buster)
      when: 'debian_version == "buster"'
      apt:
        name: [ttf-unifont]
    - name: Install Unifont (other versions of Debian)
      when: 'debian_version != "buster"'
      apt:
        name: [fonts-unifont]

- name: Create directory for CartoCSS map style repository
  file:
    path: '{{ cartocss_dir }}'
    owner: osmimport
    group: osmimport
    state: directory
    mode: '0755'

- name: Clone CartoCSS map style repository
  become_user: osmimport
  git:
    dest: '{{ cartocss_dir }}'
    repo: https://github.com/OpenRailwayMap/OpenRailwayMap-CartoCSS.git
    version: 2b47c487b914eb2f255ec9d6d83aa4aff0236b42

- name: Check if osm_import runs
  include_tasks: osm_import_active.yml

- name: Start OSM data import
  when: 'osm_import_status == "inactive"'
  command: "systemd-run -u osm_import --uid=osmimport --gid=osmimport --description='OSM data import' /bin/bash {{ tileserver_script_dir }}/scripts/import.sh"
  args:
    creates: '{{ timestamp_directory }}/timestamp.txt'

- name: Check if osm_import runs
  include_tasks: osm_import_active.yml
